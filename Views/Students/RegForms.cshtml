@model testing.Models.AdminManageModels.Student
@{
    ViewData["Title"] = "Registration Forms";
}
<h2>Registration Forms</h2>

<div>
    <input type="button" onclick="demoFromHTML()" class="btn btn-default" value="Download All" />
    <hr />
</div>
<div id="customers">
    <table id="tab_customers" class="table" >
        
        <thead>
            <tr class='warning'>
                <th>User Name</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Address</th>
                <th>Bus Stop</th>
                <th>Bus Number</th>
                <th>Delete</th>
                <th>Download</th>
            </tr>
        </thead>
        <tbody id="detailsdata"></tbody>
    </table>
</div>
<script src="~/js/site.js"></script>
<script>

    // Create Reference

    var dbRef = firebase.database().ref().child('Registration');

    dbRef.once('value', function (snapshot) {

        snapshot.forEach(function (childSnapshot) {

            console.log(childSnapshot.key);
            console.log(childSnapshot.val());

            $('#detailsdata').append(contactHtmlFromObject(childSnapshot.key, childSnapshot.val()));

        });
    });

    function del(key) {

        dbRef.child(key).remove();
        location.reload();
    }

    function print(key) {

        demoFromHTML();
    }

    //prepare conatct object' HTML
    function contactHtmlFromObject(key, contact) {

        var ourKey = key;
        console.log(ourKey);

        console.log(window.location.href);
        var html = '<tr>';
        html += '<td>' + contact.name + '</td>';
        html += '<td>' + contact.email + '</td>';
        html += '<td>' + contact.phoneNumber + '</td>';
        html += '<td>' + contact.address + '</td>';
        html += '<td>' + contact.stopName + '</td>';
        html += '<td>' + contact.busNumber + '</td>';
        html += '<td><button type="button" class="btn btn-default" onClick="del(\'' + ourKey + '\')">Delete</button></td>';
        html += '<td><button type="button" class="btn btn-default" onClick="print(\'' + ourKey + '\')">Download</button></td>';
        html += '</tr>';
        return html;
    }
</script>

<script>
    function demoFromHTML() {
        var pdf = new jsPDF('p', 'mm', 'b2');
        
        // source can be HTML-formatted string, or a reference
        // to an actual DOM element from which the text will be scraped.
        source = $('#customers')[0];
        
        // we support special element handlers. Register them with jQuery-style 
        // ID selector for either ID or node name. ("#iAmID", "div", "span" etc.)
        // There is no support for any other type of selectors 
        // (class, of compound) at this time.
        specialElementHandlers = {
            // element with id of "bypass" - jQuery style selector
            '#bypassme': function (element, renderer) {
                // true = "handled elsewhere, bypass text extraction"
                return true
            }
        };
        margins = {
            top: 80,
            bottom: 60,
            left: 40,
            width: 522
        };
        // all coords and widths are in jsPDF instance's declared units
        // 'inches' in this case
        pdf.fromHTML(
            source, // HTML string or DOM elem ref.
            margins.left, // x coord
            margins.top, { // y coord
                'width': margins.width, // max width of content on PDF
                'elementHandlers': specialElementHandlers
            },
            

            function (dispose) {
                // dispose: object with X, Y of the last line add to the PDF 
                //          this allow the insertion of new lines after html
                
                pdf.save('forms.pdf');
            }, margins);
    }
</script>
@*<script src="~/lib/print-js/src/index.js"></script>
    <script src="~/lib/print-js/webpack.mix.js"></script>
    <script src="~/lib/print-js/src/js/print.js"></script>
    <script src="~/lib/print-js/src/js/pdf.js"></script>
    <link rel="stylesheet" href="~/lib/print-js/src/css/print.css" />*@

<script src="https://unpkg.com/jspdf@latest/dist/jspdf.min.js"></script>
<script src="bower_components/jspdf/dist/jspdf.min.js"></script>
<script src="bower_components/jspdf-autotable/dist/jspdf.plugin.autotable.js"></script>

<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
</div>
